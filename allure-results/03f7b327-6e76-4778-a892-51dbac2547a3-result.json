{"name": "verify login successfully", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '..\\\\configuration.xml'", "trace": "@pytest.fixture(scope='class')\n    def init_web():\n>       browser_type = Common_Ops.get_data(\"browserType\")\n\nTest\\conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nMain\\Utilities\\common_ops.py:6: in get_data\n    root = ET.parse(\"..\\\\configuration.xml\").getroot()\nC:\\Users\\jondi\\AppData\\Local\\Programs\\Python\\Python310\\lib\\xml\\etree\\ElementTree.py:1229: in parse\n    tree.parse(source, parser)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <xml.etree.ElementTree.ElementTree object at 0x0000016716711000>\nsource = '..\\\\configuration.xml', parser = None\n\n    def parse(self, source, parser=None):\n        \"\"\"Load external XML document into element tree.\n    \n        *source* is a file name or file object, *parser* is an optional parser\n        instance that defaults to XMLParser.\n    \n        ParseError is raised if the parser fails to parse the document.\n    \n        Returns the root element of the given source document.\n    \n        \"\"\"\n        close_source = False\n        if not hasattr(source, \"read\"):\n>           source = open(source, \"rb\")\nE           FileNotFoundError: [Errno 2] No such file or directory: '..\\\\configuration.xml'\n\nC:\\Users\\jondi\\AppData\\Local\\Programs\\Python\\Python310\\lib\\xml\\etree\\ElementTree.py:569: FileNotFoundError"}, "description": "This test verify that multiple users have successfully logged on to the site", "parameters": [{"name": "username", "value": "'Katharina_Bernier'"}, {"name": "password", "value": "'s3cret'"}], "start": 1640698160624, "stop": 1640698160624, "uuid": "dccb03d2-45cb-41e9-ae78-2d30cb6c2bc0", "historyId": "3d54722c46b5c42b12f3985c63c1f0ff", "testCaseId": "baf6a1382796f07c9dc773c5aa09940f", "fullName": "Test.test_web.Test_web#test_03", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_web')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "Test_web"}, {"name": "host", "value": "Jondi"}, {"name": "thread", "value": "22452-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_web"}]}